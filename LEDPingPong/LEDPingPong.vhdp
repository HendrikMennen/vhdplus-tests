Main
(
    CS_O: out STD_LOGIC := '1';
    CLK_O: out STD_LOGIC := '0';
    DIN_O: out STD_LOGIC := '0';
)
{
    CONSTANT LED_Matrix_Length : NATURAL := (4*8);
    CONSTANT LED_Matrix_Height : NATURAL := 8;
    CONSTANT TailLength : NATURAL := 20;
    
    TYPE Point IS RECORD
    XP : NATURAL range 0 to LED_Matrix_Length;
    YP : NATURAL range 0 to LED_Matrix_Height;
    END RECORD Point;
    
    TYPE PointArray IS ARRAY (natural range <>) OF Point;
    
    CONSTANT MAX7219_Interface_Panels: NATURAL := 4;
    SIGNAL MAX7219_Interface_Reset: STD_LOGIC := '0';
    SIGNAL MAX7219_Interface_Panel_Bitmap: LED_Matrix_Array((MAX7219_Interface_Panels * 8) - 1 downto 0) := (others => (others => '0'));
    SIGNAL MAX7219_Interface_Update: STD_LOGIC := '0';
    SIGNAL MAX7219_Interface_Brightness: NATURAL range 0 to 15 := 5;
    SIGNAL MAX7219_Interface_Shutdown: STD_LOGIC := '0';
    SIGNAL MAX7219_Interface_Config: STD_LOGIC := '0';
    NewComponent MAX7219_Interface
    (
        CLK_Frequency => 2000000,
        Panels        => MAX7219_Interface_Panels,
        Rotate_seg    => '1',
        Mirror        => '1',

        Reset         => MAX7219_Interface_Reset,
        CS_O          => CS_O,
        CLK_O         => CLK_O,
        DIN_O         => DIN_O,
        Panel_Bitmap  => MAX7219_Interface_Panel_Bitmap,
        Update        => MAX7219_Interface_Update,
        Brightness    => MAX7219_Interface_Brightness,
        Shutdown      => MAX7219_Interface_Shutdown,
        Config        => MAX7219_Interface_Config,
    );
    
    Process
    (
        VARIABLE x : NATURAL range 0 to LED_Matrix_Length - 1 := 0;
        VARIABLE y : NATURAL range 0 to LED_Matrix_Height - 1 := 0;
        VARIABLE XAdd : BOOLEAN := true;
        VARIABLE YAdd : BOOLEAN := true;
        VARIABLE Tail : PointArray(0 to TailLength) := (others => (XP => 0, YP => 0));
        
        VARIABLE BrightnessAdd : BOOLEAN := true;
    )
    {
        Thread
        {
            MAX7219_Interface_Panel_Bitmap(x)(y) <= '0';

            if(XAdd)
            {
                x := x + 1;
            }
            else
            {
                x := x - 1;
            }
            if(YAdd)
            {
                y := y + 1;
            }
            else
            {
                y := y - 1;
            }
            
            
            For (VARIABLE a : INTEGER := TailLength - 1; a > 0; a := a - 1)
            {
                if(Tail(a).XP = x AND Tail(a).YP = y)
                {
                    --Collision detection
                    
                }
            }
            
            if(x >= LED_Matrix_Length - 1)
            {
                XAdd := false;
            }
            if(y >= LED_Matrix_Height - 1)
            {
                YAdd := false;
            }
            if(x <= 0)
            {
                XAdd := true;
            }
            if(y <= 0)
            {
                YAdd := true;
            }

            
            MAX7219_Interface_Panel_Bitmap(x)(y) <= '1';
            
            For (VARIABLE i : INTEGER := TailLength - 1; i > 0; i := i - 1)
            {
                Tail(i) := Tail(i - 1);
                MAX7219_Interface_Panel_Bitmap(Tail(i).XP)(Tail(i).YP) <= '1';
            }
            Tail(0) := (XP => x, YP => y);
            
            MAX7219_Interface_Panel_Bitmap(Tail(TailLength-1).XP)(Tail(TailLength-1).YP) <= '0';
            
            
            Step
            {
                MAX7219_Interface_Update <= '0';
                MAX7219_Interface_Config <= '0';
            }
            MAX7219_Interface_Update <= '1';
            Wait(10ms);
            
            If(BrightnessAdd)
            {
                MAX7219_Interface_Brightness <= MAX7219_Interface_Brightness + 1;
            }
            Else
            {
                MAX7219_Interface_Brightness <= MAX7219_Interface_Brightness - 1;
            }
            If(MAX7219_Interface_Brightness = 0)
            {
                BrightnessAdd := true;
            }
            Elsif(MAX7219_Interface_Brightness = 15)
            {
                BrightnessAdd := false;
            }
            MAX7219_Interface_Config <= '1';
            
            Wait(100ms);
        }
    }
}
