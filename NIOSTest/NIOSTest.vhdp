Main
(
    Reset         : IN STD_LOGIC;
    sdram_addr    : OUT STD_LOGIC_VECTOR (11 downto 0);
    sdram_ba      : OUT STD_LOGIC_VECTOR (1 downto 0);
    sdram_cas_n   : OUT STD_LOGIC;
    sdram_dq      : INOUT STD_LOGIC_VECTOR (15 downto 0);
    sdram_dqm     : OUT STD_LOGIC_VECTOR (1 downto 0);
    sdram_ras_n   : OUT STD_LOGIC;
    sdram_we_n    : OUT STD_LOGIC;
    sdram_clk_clk : OUT STD_LOGIC;
    pio_export    : INOUT STD_LOGIC_VECTOR (15 downto 0);
    pwm_out       : OUT STD_LOGIC_VECTOR (3 downto 0);
    uart_rxd      : IN STD_LOGIC;
    uart_txd      : OUT STD_LOGIC;
    i2c_sda       : INOUT STD_LOGIC;
    i2c_scl       : INOUT STD_LOGIC;
    spi_MISO      : IN STD_LOGIC;
    spi_MOSI      : OUT STD_LOGIC;
    spi_SCLK      : OUT STD_LOGIC;
    spi_SS_n      : OUT STD_LOGIC;
    
    LED : BUFFER STD_LOGIC := '1';
)
{
    SIGNAL ISSP_source : std_logic_vector (7 downto 0);
    SIGNAL ISSP_probe  : std_logic_vector (31 downto 0);
    
    
    Process ()
    {
        if(ISSP_source(0) = '1')
        {
            Thread
            {
                LED <= '1';
                Wait(1000ms);
                LED <= '0';
                Wait(1000ms);
            }
        }        
        
        ISSP_probe(0) <= LED;
    }
    
    NewComponent ISSP
    (
        source => ISSP_source,
        probe  => ISSP_probe,
    );
    
    NewComponent NIOSDuino_Processor
    (
        Reset         => Reset,
        sdram_addr    => sdram_addr,
        sdram_ba      => sdram_ba,
        sdram_cas_n   => sdram_cas_n,
        sdram_dq      => sdram_dq,
        sdram_dqm     => sdram_dqm,
        sdram_ras_n   => sdram_ras_n,
        sdram_we_n    => sdram_we_n,
        sdram_clk_clk => sdram_clk_clk,
        pio_export    => pio_export,
        pwm_out       => pwm_out,
        uart_rxd      => uart_rxd,
        uart_txd      => uart_txd,
        i2c_sda       => i2c_sda,
        i2c_scl       => i2c_scl,
        spi_MISO      => spi_MISO,
        spi_MOSI      => spi_MOSI,
        spi_SCLK      => spi_SCLK,
        spi_SS_n      => spi_SS_n,
    );
}